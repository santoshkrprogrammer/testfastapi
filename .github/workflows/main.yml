name: FastAPI CI/CD

on:
  push:
    branches:
      - master

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies to package/
        run: |
          mkdir -p package
          pip install --target package -r requirements.txt

      - name: Zip dependencies
        run: |
          cd package
          zip -r9 ../api.zip .
          cd ..

      - name: Add API files to zip
        run: |
          zip -g api.zip -r api

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI v2
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1

      - name: List files in current directory
        run: ls -l

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v4
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://fastapis3lamdba/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapilambda --s3-bucket fastapis3lamdba --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1
    
      - name: Create API Gateway
        run: |
          # Step 1: Create API Gateway
          API_ID=$(aws apigateway create-rest-api --name "FastAPI-Gateway" --query "id" --output text)

          # Step 2: Get root resource ID
          PARENT_ID=$(aws apigateway get-resources --rest-api-id $API_ID --query "items[?path=='/'].id" --output text)

          # Step 3: Create /api3 resource
          RESOURCE_ID=$(aws apigateway create-resource --rest-api-id $API_ID --parent-id $PARENT_ID --path-part api3 --query "id" --output text)

          # Step 4: Create GET method for /api3
          aws apigateway put-method --rest-api-id $API_ID --resource-id $RESOURCE_ID --http-method GET --authorization-type "NONE"

          # Step 5: Integrate with Lambda
          aws apigateway put-integration \
            --rest-api-id $API_ID \
            --resource-id $RESOURCE_ID \
            --http-method GET \
            --type AWS_PROXY \
            --integration-http-method POST \
            --uri arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:645937553410:function:fastapilambda

          # Step 6: Deploy the API
          aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      
  
             
         
          
