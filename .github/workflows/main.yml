name: FastAPI CI/CD

on:
  push:
    branches:
      - master

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies to package/
        run: |
          mkdir -p package
          pip install --target package -r requirements.txt

      - name: Zip dependencies
        run: |
          cd package
          zip -r9 ../api.zip .
          cd ..

      - name: Add API files to zip
        run: |
          zip -g api.zip -r api

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI v2
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1

      - name: List files in current directory
        run: ls -l

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v4
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://fastapis3lamdba/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapilambda --s3-bucket fastapis3lamdba --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: us-east-1
    
      - name: Create API Gateway Integration for Lambda
        run: |
          # Create the API Gateway REST API
          api_id=$(aws apigateway create-rest-api --name 'FastAPI' --query 'id' --output text)

          # Get the root resource ID
          root_id=$(aws apigateway get-resources --rest-api-id $api_id --query 'items[0].id' --output text)

          # Create the GET method
          aws apigateway put-method --rest-api-id $api_id --resource-id $root_id --http-method GET --authorization-type NONE

          # Create the Lambda integration
          aws apigateway put-integration --rest-api-id $api_id --resource-id $root_id --http-method GET --type AWS_PROXY --integration-http-method POST --uri arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:fastapilambda/invocations

          # Deploy the API
          deployment_id=$(aws apigateway create-deployment --rest-api-id $api_id --stage-name prod --query 'id' --output text)

          echo "API Gateway deployed with API ID: $api_id, Deployment ID: $deployment_id"

      - name: Grant API Gateway permission to invoke Lambda
        run: |
          aws lambda add-permission --function-name fastapilambda --principal apigateway.amazonaws.com --statement-id $(uuidgen) --action lambda:InvokeFunction --source-arn arn:aws:apigateway:us-east-1::/restapis/*/resources/*/methods/GET
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1